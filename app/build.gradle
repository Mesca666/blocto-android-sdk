plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
}

apply from: "$rootDir/dependencies.gradle"

android {
    namespace 'com.portto.valuedapp'

    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.portto.valuedapp"
        minSdk versions.minSdk
        targetSdk versions.compileSdk
        versionCode 1
        versionName "1.0.0"
        versionNameSuffix "-" + getDate()
    }

    def signingFilePath = "secrets/signing.properties"
    def isSigningFileExist = rootProject.file(signingFilePath).exists()

    signingConfigs {
        release {
            if (!isSigningFileExist) return
            def signingProperties = new Properties()
            rootProject.file(signingFilePath).withInputStream {
                signingProperties.load(it)
            }
            storeFile = rootProject.file("secrets/portto.jjs")
            storePassword = signingProperties["STORE_PASSWORD"].toString()
            keyAlias = signingProperties["KEY_ALIAS"].toString()
            keyPassword = signingProperties["KEY_PASSWORD"].toString()
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (isSigningFileExist) {
                signingConfig signingConfigs.release
            }
            firebaseAppDistribution {
                serviceCredentialsFile="secrets/app-distribution.json"
                artifactType="APK"
                groups="portto"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    // Exclude protobuf javalite from all dependencies to resolve conflicts
    configurations.all {
        exclude group: "com.google.protobuf", module: "protobuf-javalite"
    }
}

static def getDate() {
    return new Date().format('yyyyMMddHHmm')
}

dependencies {
    implementation project(':evm')
    implementation project(':solana')
    implementation project(':flow')
    implementation "androidx.core:core-ktx:$versions.androidx_core"
    implementation "androidx.appcompat:appcompat:$versions.androidx_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
    implementation "androidx.activity:activity-ktx:$versions.androidx_activity"
    implementation "androidx.fragment:fragment-ktx:$versions.androidx_fragment"
    implementation "com.google.android.material:material:$versions.material"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    implementation "com.github.razir.progressbutton:progressbutton:$versions.progressbutton"
    implementation("com.jakewharton.timber:timber:$versions.timber")

    implementation("com.github.komputing.khash:keccak:$versions.keccak")
    implementation("com.portto.solana:web3:$versions.solana_web3")
    implementation("org.web3j:core:$versions.web3j") {
        exclude module: 'bcprov-jdk15on'
    }
    implementation("com.portto.ethereum:sign:$versions.eth_sign_util") {
        exclude module: 'bcprov-jdk15on'
    }

    implementation("com.nftco:flow-jvm-sdk:0.7.1") {
        exclude module: 'bcprov-jdk15on'
    }
    implementation("io.grpc:grpc-okhttp:1.47.0")
    implementation platform("com.google.firebase:firebase-bom:29.3.1")
}
